#!/usr/bin/env python

# The primes 3, 7, 109, and 673, are quite remarkable. By taking any two
# primes and concatenating them in any order the result will always be
# prime. For example, taking 7 and 109, both 7109 and 1097 are prime. The
# sum of these four primes, 792, represents the lowest sum for a set
# of four primes with this property.

# Find the lowest sum for a set of five primes for which any two primes
# concatenate to produce another prime.

from python_code.decorators import euler_timer
from python_code.functions import apply_to_list
from python_code.functions import all_subsets
from python_code.functions import sieve

def number_concat(left, right):
    return int(str(left) + str(right))

def all_concat_prime(list_, primes):
    all_concat = set(apply_to_list(number_concat, list_, non_match=True))
    return (len(all_concat.intersection(primes)) == len(all_concat))

@euler_timer(60)
def main():
    my_max = 10**6
    PRIMES = sieve(my_max)

    index = 5
    to_check = [PRIMES[:index]]
    while True:
        print index
        for tuple_ in to_check:
            if all_concat_prime(tuple_, PRIMES):
                print tuple_
                return
        to_check = all_subsets(PRIMES[:index], 4)
        to_check = [ list(sub) + [PRIMES[index]] for sub in to_check ]
        index += 1

if __name__ == "__main__":
    main()
