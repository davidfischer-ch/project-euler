#!/usr/bin/env python

# What is the smallest odd composite n that can't be written n = p + 2k^2
# for some prime p and some integer k?

from python_code.decorators import euler_timer
from python_code.functions import sieve
from math import sqrt

def is_square(n):
    return n == (int(sqrt(n)))**2

def is_possible(n, primes):
    if n % 2 == 0 or n in primes:
        raise Error("Value poorly specified")

    primes_less = [ prime for prime in primes if prime < n and prime != 2 ]
    for prime in primes_less:
        if is_square((n - prime)/2.0):
            return True
    return False

@euler_timer(46)
def main():
    # sieve(6000) will do it (answer is 5777)
    curr = 9
    primes = sieve(5777)
    while is_possible(curr, primes):
        curr += 2
        while curr in primes:
            curr += 2
    print curr

if __name__ == "__main__":
    main()
